language: objective-c
osx_image: xcode10
branches:
  only:
    - master
    - develop
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  directories:
    - $HOME/Library/Caches/org.carthage.CarthageKit/dependencies
    - Carthage
    - vendor/bundle

before_install:
  - bundle install --path vendor/bundle
  - gem install xcpretty
  - brew update
  - brew outdated carthage || brew upgrade carthage

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - LANG=en_US.UTF-8
    - WORKSPACE=CacheLRU.xcworkspace
    - IOS_FRAMEWORK_SCHEME="CacheLRU-iOS"
    - OSX_FRAMEWORK_SCHEME="CacheLRU-macOS"
    - TVOS_FRAMEWORK_SCHEME="CacheLRU-tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="CacheLRU-watchOS"
  matrix:
    - DESTINATION="OS=12.0,name=iPhone XS"                  SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="arch=x86_64"                             SCHEME="$OSX_FRAMEWORK_SCHEME"     RUN_TESTS="YES"
    - DESTINATION="OS=12.0,name=Apple TV 4K (at 1080p)"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES"
    - DESTINATION="OS=5.0,name=Apple Watch Series 4 - 44mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"

before_script:
  - sh scripts/bootstrap

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty -c;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi

jobs:
  include:
    - stage: Pod lib lint
      script: bundle exec pod lib lint --use-libraries --verbose --allow-warnings
    - stage: Deploy Github
      script: skip
      before_deploy:
        - carthage build --no-skip-current --cache-builds
        - carthage archive CacheLRU
      deploy:
        - provider: releases 
          api_key:
            secure: m1EMJJvAOynR9dtFSD6pHQqeTyu8fwASP16SC7ReRGYSMr8uN3XHhN4MsUHnlhiAgxeTIjKMwqMkfQSjv2nXNtHh6L8jlFphYSqZEY3eKxbO+IXo3QOWjGJ1vp/Fi0DZG88LgK+swi+VvqVR9dC7Ps1NerTSmhk6J4iMvKif/noH9ppvqq0sZbCvcLOGWlZWbkl7HKTKBsnPy5vMCs3JIBmOY83kxOoWZYc7kJIuQ5EmeOPc/GpVEwipE7IBv4i3/Bz6aQLpJudt25uicY2PhIfR89L8s9+V9BrXFXWMzUObP3SZ7OvT/or4B/weiUWqngCvcg/f+/cA67T9XwJMGvMVUwl6fJpWirL82V0YScaJzMKfQE48HVt6lhTKRmk8DcPirDbEARTrsCdtv0nLjEtfEvqPWZyb9xnB9YPdfLyCrqiZoMUjVnIcE5CvqlMmGMXwFrcFchvJg3s/7blvEJFFuFQjpyZ91p9svuRUbwxIKz9sxqAsb2meKGRKMXVm48H10PrzHA6PCFJaeXRwGzFigpBFuzXjXgNP/+PVESGrunZCtwe1I8zQehpatlh7ujzmPVJyVSYjHYloP3SD5RHHhe0oYJlp6pcoYOIzJ5QAE1YTsil7l6ko2mu+QCSKj/fJgqU+v/prlEJ39wu5ing5R2pqBt91xLxx95csq78=
          file:
            - CacheLRU.framework.zip
          skip_cleanup: true
          overwrite: true
          on:
            repo: bfernandesbfs/CacheLRU
            tags: true
    - stage: Deploy Cocoapods
      script: skip
      deploy:
        - provider: script # https://fuller.li/posts/automated-cocoapods-releases-with-ci/
          script: bundle exec pod trunk push
          skip_cleanup: true
          on:
            tags: true
